// <auto-generated />
using System;
using CabinetMedecin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabinetMedecin2.Migrations
{
    [DbContext(typeof(GestionDbContext))]
    [Migration("20240515191756_initialmigration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CabinetMedecin2.Models.Assistante", b =>
                {
                    b.Property<int>("AssistantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssistantId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssistantId");

                    b.ToTable("Assistante");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.CabinetMedical", b =>
                {
                    b.Property<int>("id_cabinet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cabinet"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_cabinet");

                    b.ToTable("CabinetsMedicaux");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.DossierPatient", b =>
                {
                    b.Property<int>("id_dossier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_dossier"));

                    b.Property<string>("AntecedentsMedicaux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ordonnances")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultatsExamens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_dossier");

                    b.ToTable("DossiersPatients");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.ExamenMedical", b =>
                {
                    b.Property<int>("id_examen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examen"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientAssocieid_patient")
                        .HasColumnType("int");

                    b.Property<string>("Resultat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_examen");

                    b.HasIndex("PatientAssocieid_patient");

                    b.ToTable("ExamensMedicaux");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Facture", b =>
                {
                    b.Property<int>("id_facture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_facture"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatientAssocieid_patient")
                        .HasColumnType("int");

                    b.HasKey("id_facture");

                    b.HasIndex("PatientAssocieid_patient");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Medecin", b =>
                {
                    b.Property<int>("MedecinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedecinId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedecinId");

                    b.ToTable("Medecin");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Paiement", b =>
                {
                    b.Property<int>("id_paiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_paiement"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactureAssocieeid_facture")
                        .HasColumnType("int");

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_paiement");

                    b.HasIndex("FactureAssocieeid_facture");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Patient", b =>
                {
                    b.Property<int>("id_patient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_patient"));

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dossierid_dossier")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_patient");

                    b.HasIndex("Dossierid_dossier");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.PersonnelMedical", b =>
                {
                    b.Property<int>("id_personnelmedical")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_personnelmedical"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_personnelmedical");

                    b.ToTable("PersonnelMedical");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Procedure", b =>
                {
                    b.Property<int>("id_proceure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_proceure"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientAssocieid_patient")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_proceure");

                    b.HasIndex("PatientAssocieid_patient");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.RendezVous", b =>
                {
                    b.Property<int>("id_rendezvous")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rendezvous"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientAssocieid_patient")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelMedicalAssocieid_personnelmedical")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_rendezvous");

                    b.HasIndex("PatientAssocieid_patient");

                    b.HasIndex("PersonnelMedicalAssocieid_personnelmedical");

                    b.ToTable("RendezVous");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.ServiceMedical", b =>
                {
                    b.Property<int>("id_service")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_service"));

                    b.Property<int?>("Factureid_facture")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_service");

                    b.HasIndex("Factureid_facture");

                    b.ToTable("ServiceMedical");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.ExamenMedical", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Patient", "PatientAssocie")
                        .WithMany("ExamensMedicaux")
                        .HasForeignKey("PatientAssocieid_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientAssocie");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Facture", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Patient", "PatientAssocie")
                        .WithMany()
                        .HasForeignKey("PatientAssocieid_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientAssocie");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Paiement", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Facture", "FactureAssociee")
                        .WithMany()
                        .HasForeignKey("FactureAssocieeid_facture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactureAssociee");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Patient", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.DossierPatient", "Dossier")
                        .WithMany()
                        .HasForeignKey("Dossierid_dossier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Procedure", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Patient", "PatientAssocie")
                        .WithMany("Procedures")
                        .HasForeignKey("PatientAssocieid_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientAssocie");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.RendezVous", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Patient", "PatientAssocie")
                        .WithMany("RendezVous")
                        .HasForeignKey("PatientAssocieid_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabinetMedecin2.Models.PersonnelMedical", "PersonnelMedicalAssocie")
                        .WithMany()
                        .HasForeignKey("PersonnelMedicalAssocieid_personnelmedical")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientAssocie");

                    b.Navigation("PersonnelMedicalAssocie");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.ServiceMedical", b =>
                {
                    b.HasOne("CabinetMedecin2.Models.Facture", null)
                        .WithMany("ServicesMedicaux")
                        .HasForeignKey("Factureid_facture");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Facture", b =>
                {
                    b.Navigation("ServicesMedicaux");
                });

            modelBuilder.Entity("CabinetMedecin2.Models.Patient", b =>
                {
                    b.Navigation("ExamensMedicaux");

                    b.Navigation("Procedures");

                    b.Navigation("RendezVous");
                });
#pragma warning restore 612, 618
        }
    }
}
